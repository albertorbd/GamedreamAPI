// <auto-generated />
using System;
using GamedreamAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamedreamAPI.Data.Migrations
{
    [DbContext(typeof(GamedreamContext))]
    [Migration("20240607135737_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GamedreamAPI.Models.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Concept")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int?>("VideogameId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("VideogameId");

                    b.ToTable("Operations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 100.0,
                            Concept = "Ingreso",
                            Date = new DateTime(2024, 5, 6, 0, 9, 2, 0, DateTimeKind.Unspecified),
                            Method = "PayPal",
                            Quantity = 1.0,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Amount = 0.0,
                            Concept = "Comprar Manor lords",
                            Date = new DateTime(2024, 5, 6, 0, 9, 12, 0, DateTimeKind.Unspecified),
                            Quantity = 1.0,
                            UserId = 2,
                            VideogameId = 4
                        },
                        new
                        {
                            Id = 3,
                            Amount = 100.0,
                            Concept = "Ingreso",
                            Date = new DateTime(2024, 5, 3, 20, 44, 36, 0, DateTimeKind.Unspecified),
                            Method = "Tarjeta de crédito",
                            Quantity = 1.0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Amount = 30.0,
                            Concept = "Retirada",
                            Date = new DateTime(2024, 5, 3, 20, 44, 52, 0, DateTimeKind.Unspecified),
                            Method = "PayPal",
                            Quantity = 1.0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            Amount = 50.0,
                            Concept = "Comprar Persona 5",
                            Date = new DateTime(2024, 5, 5, 23, 33, 6, 0, DateTimeKind.Unspecified),
                            Method = "Tarjeta de crédito",
                            Quantity = 1.0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 6,
                            Amount = 50.0,
                            Concept = "Ingreso",
                            Date = new DateTime(2024, 5, 5, 23, 39, 18, 0, DateTimeKind.Unspecified),
                            Method = "Tarjeta de crédito",
                            Quantity = 1.0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 7,
                            Amount = 70.0,
                            Concept = "Dragons dogma 2",
                            Date = new DateTime(2024, 5, 5, 23, 39, 36, 0, DateTimeKind.Unspecified),
                            Quantity = 1.0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Amount = 100.0,
                            Concept = "Ingreso",
                            Date = new DateTime(2024, 5, 5, 23, 52, 22, 0, DateTimeKind.Unspecified),
                            Method = "PayPal",
                            Quantity = 1.0,
                            UserId = 3
                        },
                        new
                        {
                            Id = 9,
                            Amount = 0.0,
                            Concept = "Comprar Final Fantasy XV",
                            Date = new DateTime(2024, 5, 5, 23, 55, 20, 0, DateTimeKind.Unspecified),
                            Quantity = 0.0,
                            UserId = 3,
                            VideogameId = 3
                        });
                });

            modelBuilder.Entity("GamedreamAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Money")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 12, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DNI = "345678",
                            Email = "jesusito@hotmail.es",
                            Lastname = "Lopez",
                            Money = 60.0,
                            Name = "Jesus",
                            Password = "12345",
                            Role = "user"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(1996, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DNI = "2532135",
                            Email = "albertoriveiro@hotmail.es",
                            Lastname = "Riveiro del Bano",
                            Money = 50.0,
                            Name = "Alberto",
                            Password = "1234567",
                            Role = "admin"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(1980, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DNI = "234567",
                            Email = "carlitos@hotmail.es",
                            Lastname = "diaz",
                            Money = 0.0,
                            Name = "carlos",
                            Password = "carlitos12",
                            Role = "user"
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(1995, 5, 31, 12, 41, 4, 0, DateTimeKind.Unspecified),
                            DNI = "2312313123",
                            Email = "marcos@hotmail.es",
                            Lastname = "M",
                            Money = 0.0,
                            Name = "Marcos",
                            Password = "caballo14",
                            Role = "user"
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2002, 5, 31, 12, 49, 44, 0, DateTimeKind.Unspecified),
                            DNI = "21312321313",
                            Email = "mariobes@hotmail.com",
                            Lastname = "Bes",
                            Money = 0.0,
                            Name = "Mario",
                            Password = "caballo1213123",
                            Role = "user"
                        });
                });

            modelBuilder.Entity("GamedreamAPI.Models.Videogame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Valoration")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Videogames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Eres un Arisen que tiene que recuperar su corazón",
                            Developer = "Capcom",
                            Genre = "Aventura y Rol",
                            Name = "Dragons dogma 2",
                            Platform = "PC PS5 Y XBOX",
                            Price = 70.0,
                            RegisterDate = new DateTime(2024, 5, 3, 13, 18, 45, 0, DateTimeKind.Unspecified),
                            Valoration = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "Juego de rol muy famoso",
                            Developer = "Balve",
                            Genre = "Rol",
                            Name = "Persona 5",
                            Platform = "PC y PS4",
                            Price = 60.0,
                            RegisterDate = new DateTime(2024, 5, 3, 13, 28, 28, 0, DateTimeKind.Unspecified),
                            Valoration = 10
                        },
                        new
                        {
                            Id = 3,
                            Description = "Subir niveles y matar monstruos",
                            Developer = "Square Enix",
                            Genre = "Aventuras y Rol",
                            Name = "Final Fantasy XV",
                            Platform = "PS5",
                            Price = 50.0,
                            RegisterDate = new DateTime(2024, 5, 5, 23, 54, 31, 0, DateTimeKind.Unspecified),
                            Valoration = 9
                        },
                        new
                        {
                            Id = 4,
                            Description = "Construye tu imperio",
                            Developer = "Three Kingdom",
                            Genre = "Estrategia",
                            Name = "Manor lords",
                            Platform = "PC",
                            Price = 40.0,
                            RegisterDate = new DateTime(2024, 5, 6, 0, 8, 2, 0, DateTimeKind.Unspecified),
                            Valoration = 9
                        },
                        new
                        {
                            Id = 5,
                            Description = "Juego de acción con buena historia",
                            Developer = "ASASSA",
                            Genre = "Acción",
                            Name = "Max Payne 4",
                            Platform = "PC",
                            Price = 40.0,
                            RegisterDate = new DateTime(2024, 6, 1, 2, 29, 36, 0, DateTimeKind.Unspecified),
                            Valoration = 9
                        },
                        new
                        {
                            Id = 6,
                            Description = "adsadad",
                            Developer = "sasasasas",
                            Genre = "adasdad",
                            Name = "asdadasda",
                            Platform = "assaasdas",
                            Price = 30.0,
                            RegisterDate = new DateTime(2024, 6, 2, 22, 41, 43, 0, DateTimeKind.Unspecified),
                            Valoration = 9
                        });
                });

            modelBuilder.Entity("GamedreamAPI.Models.Operation", b =>
                {
                    b.HasOne("GamedreamAPI.Models.User", "user")
                        .WithMany("Operations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamedreamAPI.Models.Videogame", "videogame")
                        .WithMany()
                        .HasForeignKey("VideogameId");

                    b.Navigation("user");

                    b.Navigation("videogame");
                });

            modelBuilder.Entity("GamedreamAPI.Models.User", b =>
                {
                    b.Navigation("Operations");
                });
#pragma warning restore 612, 618
        }
    }
}
